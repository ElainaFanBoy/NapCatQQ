// @generated by protobuf-ts 2.9.4
// @generated from protobuf file "event/wrapper.proto" (package "Laana", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { SelfInvitedToGroupEvent } from "./request";
import { SomeoneRequestToJoinGroupEvent } from "./request";
import { SomeoneRequestToAddBuddyEvent } from "./request";
import { GroupEmojiLikeEvent } from "./group";
import { GroupLiftShutUpAllEvent } from "./group";
import { GroupLiftShutUpMemberEvent } from "./group";
import { GroupShutUpAllEvent } from "./group";
import { GroupShutUpMemberEvent } from "./group";
import { GroupMessageWithdrawEvent } from "./group";
import { GroupMemberTitleChangeEvent } from "./group";
import { GroupMemberDecreaseEvent } from "./group";
import { GroupMemberIncreaseEvent } from "./group";
import { GroupMemberCardChangeEvent } from "./group";
import { GroupEssenceMessageEvent } from "./group";
import { GroupAdminChangeEvent } from "./group";
import { BuddyMessageWithdrawEvent } from "./buddy";
import { BuddyAddedEvent } from "./buddy";
/**
 * @generated from protobuf message Laana.EventWrapper
 */
export interface EventWrapper {
    /**
     * @generated from protobuf field: string eventId = 1;
     */
    eventId: string;
    /**
     * @generated from protobuf field: uint64 time = 2;
     */
    time: bigint;
    /**
     * @generated from protobuf field: string botUin = 3;
     */
    botUin: string;
    /**
     * @generated from protobuf oneof: event
     */
    event: {
        oneofKind: "buddyAddedEvent";
        /**
         * @generated from protobuf field: Laana.BuddyAddedEvent buddyAddedEvent = 101;
         */
        buddyAddedEvent: BuddyAddedEvent;
    } | {
        oneofKind: "buddyMessageWithdrawEvent";
        /**
         * @generated from protobuf field: Laana.BuddyMessageWithdrawEvent buddyMessageWithdrawEvent = 102;
         */
        buddyMessageWithdrawEvent: BuddyMessageWithdrawEvent;
    } | {
        oneofKind: "groupAdminChangeEvent";
        /**
         * @generated from protobuf field: Laana.GroupAdminChangeEvent groupAdminChangeEvent = 201;
         */
        groupAdminChangeEvent: GroupAdminChangeEvent;
    } | {
        oneofKind: "groupEssenceMessageEvent";
        /**
         * @generated from protobuf field: Laana.GroupEssenceMessageEvent groupEssenceMessageEvent = 202;
         */
        groupEssenceMessageEvent: GroupEssenceMessageEvent;
    } | {
        oneofKind: "groupMemberCardChangeEvent";
        /**
         * @generated from protobuf field: Laana.GroupMemberCardChangeEvent groupMemberCardChangeEvent = 203;
         */
        groupMemberCardChangeEvent: GroupMemberCardChangeEvent;
    } | {
        oneofKind: "groupMemberIncreaseEvent";
        /**
         * @generated from protobuf field: Laana.GroupMemberIncreaseEvent groupMemberIncreaseEvent = 204;
         */
        groupMemberIncreaseEvent: GroupMemberIncreaseEvent;
    } | {
        oneofKind: "groupMemberDecreaseEvent";
        /**
         * @generated from protobuf field: Laana.GroupMemberDecreaseEvent groupMemberDecreaseEvent = 205;
         */
        groupMemberDecreaseEvent: GroupMemberDecreaseEvent;
    } | {
        oneofKind: "groupMemberTitleChangeEvent";
        /**
         * @generated from protobuf field: Laana.GroupMemberTitleChangeEvent groupMemberTitleChangeEvent = 206;
         */
        groupMemberTitleChangeEvent: GroupMemberTitleChangeEvent;
    } | {
        oneofKind: "groupMessageWithdrawEvent";
        /**
         * @generated from protobuf field: Laana.GroupMessageWithdrawEvent groupMessageWithdrawEvent = 207;
         */
        groupMessageWithdrawEvent: GroupMessageWithdrawEvent;
    } | {
        oneofKind: "groupMuteMemberEvent";
        /**
         * @generated from protobuf field: Laana.GroupShutUpMemberEvent groupMuteMemberEvent = 208;
         */
        groupMuteMemberEvent: GroupShutUpMemberEvent;
    } | {
        oneofKind: "groupMuteAllEvent";
        /**
         * @generated from protobuf field: Laana.GroupShutUpAllEvent groupMuteAllEvent = 209;
         */
        groupMuteAllEvent: GroupShutUpAllEvent;
    } | {
        oneofKind: "groupUnmuteMemberEvent";
        /**
         * @generated from protobuf field: Laana.GroupLiftShutUpMemberEvent groupUnmuteMemberEvent = 210;
         */
        groupUnmuteMemberEvent: GroupLiftShutUpMemberEvent;
    } | {
        oneofKind: "groupUnmuteAllEvent";
        /**
         * @generated from protobuf field: Laana.GroupLiftShutUpAllEvent groupUnmuteAllEvent = 211;
         */
        groupUnmuteAllEvent: GroupLiftShutUpAllEvent;
    } | {
        oneofKind: "groupEmojiLikeEvent";
        /**
         * @generated from protobuf field: Laana.GroupEmojiLikeEvent groupEmojiLikeEvent = 212;
         */
        groupEmojiLikeEvent: GroupEmojiLikeEvent;
    } | {
        oneofKind: "someoneRequestToAddBuddyEvent";
        /**
         * @generated from protobuf field: Laana.SomeoneRequestToAddBuddyEvent someoneRequestToAddBuddyEvent = 301;
         */
        someoneRequestToAddBuddyEvent: SomeoneRequestToAddBuddyEvent;
    } | {
        oneofKind: "someoneRequestToJoinGroupEvent";
        /**
         * @generated from protobuf field: Laana.SomeoneRequestToJoinGroupEvent someoneRequestToJoinGroupEvent = 302;
         */
        someoneRequestToJoinGroupEvent: SomeoneRequestToJoinGroupEvent;
    } | {
        oneofKind: "selfInvitedToGroupEvent";
        /**
         * @generated from protobuf field: Laana.SelfInvitedToGroupEvent selfInvitedToGroupEvent = 303;
         */
        selfInvitedToGroupEvent: SelfInvitedToGroupEvent;
    } | {
        oneofKind: "extendedEvent";
        /**
         * @generated from protobuf field: Laana.ExtendedEvent extendedEvent = 9999;
         */
        extendedEvent: ExtendedEvent;
    } | {
        oneofKind: undefined;
    };
}
/**
 * @generated from protobuf message Laana.ExtendedEvent
 */
export interface ExtendedEvent {
    /**
     * @generated from protobuf field: string eventName = 1;
     */
    eventName: string;
    /**
     * @generated from protobuf field: bytes eventData = 2;
     */
    eventData: Uint8Array;
}
// @generated message type with reflection information, may provide speed optimized methods
class EventWrapper$Type extends MessageType<EventWrapper> {
    constructor() {
        super("Laana.EventWrapper", [
            { no: 1, name: "eventId", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "time", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "botUin", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 101, name: "buddyAddedEvent", kind: "message", oneof: "event", T: () => BuddyAddedEvent },
            { no: 102, name: "buddyMessageWithdrawEvent", kind: "message", oneof: "event", T: () => BuddyMessageWithdrawEvent },
            { no: 201, name: "groupAdminChangeEvent", kind: "message", oneof: "event", T: () => GroupAdminChangeEvent },
            { no: 202, name: "groupEssenceMessageEvent", kind: "message", oneof: "event", T: () => GroupEssenceMessageEvent },
            { no: 203, name: "groupMemberCardChangeEvent", kind: "message", oneof: "event", T: () => GroupMemberCardChangeEvent },
            { no: 204, name: "groupMemberIncreaseEvent", kind: "message", oneof: "event", T: () => GroupMemberIncreaseEvent },
            { no: 205, name: "groupMemberDecreaseEvent", kind: "message", oneof: "event", T: () => GroupMemberDecreaseEvent },
            { no: 206, name: "groupMemberTitleChangeEvent", kind: "message", oneof: "event", T: () => GroupMemberTitleChangeEvent },
            { no: 207, name: "groupMessageWithdrawEvent", kind: "message", oneof: "event", T: () => GroupMessageWithdrawEvent },
            { no: 208, name: "groupMuteMemberEvent", kind: "message", oneof: "event", T: () => GroupShutUpMemberEvent },
            { no: 209, name: "groupMuteAllEvent", kind: "message", oneof: "event", T: () => GroupShutUpAllEvent },
            { no: 210, name: "groupUnmuteMemberEvent", kind: "message", oneof: "event", T: () => GroupLiftShutUpMemberEvent },
            { no: 211, name: "groupUnmuteAllEvent", kind: "message", oneof: "event", T: () => GroupLiftShutUpAllEvent },
            { no: 212, name: "groupEmojiLikeEvent", kind: "message", oneof: "event", T: () => GroupEmojiLikeEvent },
            { no: 301, name: "someoneRequestToAddBuddyEvent", kind: "message", oneof: "event", T: () => SomeoneRequestToAddBuddyEvent },
            { no: 302, name: "someoneRequestToJoinGroupEvent", kind: "message", oneof: "event", T: () => SomeoneRequestToJoinGroupEvent },
            { no: 303, name: "selfInvitedToGroupEvent", kind: "message", oneof: "event", T: () => SelfInvitedToGroupEvent },
            { no: 9999, name: "extendedEvent", kind: "message", oneof: "event", T: () => ExtendedEvent }
        ]);
    }
    create(value?: PartialMessage<EventWrapper>): EventWrapper {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.eventId = "";
        message.time = 0n;
        message.botUin = "";
        message.event = { oneofKind: undefined };
        if (value !== undefined)
            reflectionMergePartial<EventWrapper>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: EventWrapper): EventWrapper {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string eventId */ 1:
                    message.eventId = reader.string();
                    break;
                case /* uint64 time */ 2:
                    message.time = reader.uint64().toBigInt();
                    break;
                case /* string botUin */ 3:
                    message.botUin = reader.string();
                    break;
                case /* Laana.BuddyAddedEvent buddyAddedEvent */ 101:
                    message.event = {
                        oneofKind: "buddyAddedEvent",
                        buddyAddedEvent: BuddyAddedEvent.internalBinaryRead(reader, reader.uint32(), options, (message.event as any).buddyAddedEvent)
                    };
                    break;
                case /* Laana.BuddyMessageWithdrawEvent buddyMessageWithdrawEvent */ 102:
                    message.event = {
                        oneofKind: "buddyMessageWithdrawEvent",
                        buddyMessageWithdrawEvent: BuddyMessageWithdrawEvent.internalBinaryRead(reader, reader.uint32(), options, (message.event as any).buddyMessageWithdrawEvent)
                    };
                    break;
                case /* Laana.GroupAdminChangeEvent groupAdminChangeEvent */ 201:
                    message.event = {
                        oneofKind: "groupAdminChangeEvent",
                        groupAdminChangeEvent: GroupAdminChangeEvent.internalBinaryRead(reader, reader.uint32(), options, (message.event as any).groupAdminChangeEvent)
                    };
                    break;
                case /* Laana.GroupEssenceMessageEvent groupEssenceMessageEvent */ 202:
                    message.event = {
                        oneofKind: "groupEssenceMessageEvent",
                        groupEssenceMessageEvent: GroupEssenceMessageEvent.internalBinaryRead(reader, reader.uint32(), options, (message.event as any).groupEssenceMessageEvent)
                    };
                    break;
                case /* Laana.GroupMemberCardChangeEvent groupMemberCardChangeEvent */ 203:
                    message.event = {
                        oneofKind: "groupMemberCardChangeEvent",
                        groupMemberCardChangeEvent: GroupMemberCardChangeEvent.internalBinaryRead(reader, reader.uint32(), options, (message.event as any).groupMemberCardChangeEvent)
                    };
                    break;
                case /* Laana.GroupMemberIncreaseEvent groupMemberIncreaseEvent */ 204:
                    message.event = {
                        oneofKind: "groupMemberIncreaseEvent",
                        groupMemberIncreaseEvent: GroupMemberIncreaseEvent.internalBinaryRead(reader, reader.uint32(), options, (message.event as any).groupMemberIncreaseEvent)
                    };
                    break;
                case /* Laana.GroupMemberDecreaseEvent groupMemberDecreaseEvent */ 205:
                    message.event = {
                        oneofKind: "groupMemberDecreaseEvent",
                        groupMemberDecreaseEvent: GroupMemberDecreaseEvent.internalBinaryRead(reader, reader.uint32(), options, (message.event as any).groupMemberDecreaseEvent)
                    };
                    break;
                case /* Laana.GroupMemberTitleChangeEvent groupMemberTitleChangeEvent */ 206:
                    message.event = {
                        oneofKind: "groupMemberTitleChangeEvent",
                        groupMemberTitleChangeEvent: GroupMemberTitleChangeEvent.internalBinaryRead(reader, reader.uint32(), options, (message.event as any).groupMemberTitleChangeEvent)
                    };
                    break;
                case /* Laana.GroupMessageWithdrawEvent groupMessageWithdrawEvent */ 207:
                    message.event = {
                        oneofKind: "groupMessageWithdrawEvent",
                        groupMessageWithdrawEvent: GroupMessageWithdrawEvent.internalBinaryRead(reader, reader.uint32(), options, (message.event as any).groupMessageWithdrawEvent)
                    };
                    break;
                case /* Laana.GroupShutUpMemberEvent groupMuteMemberEvent */ 208:
                    message.event = {
                        oneofKind: "groupMuteMemberEvent",
                        groupMuteMemberEvent: GroupShutUpMemberEvent.internalBinaryRead(reader, reader.uint32(), options, (message.event as any).groupMuteMemberEvent)
                    };
                    break;
                case /* Laana.GroupShutUpAllEvent groupMuteAllEvent */ 209:
                    message.event = {
                        oneofKind: "groupMuteAllEvent",
                        groupMuteAllEvent: GroupShutUpAllEvent.internalBinaryRead(reader, reader.uint32(), options, (message.event as any).groupMuteAllEvent)
                    };
                    break;
                case /* Laana.GroupLiftShutUpMemberEvent groupUnmuteMemberEvent */ 210:
                    message.event = {
                        oneofKind: "groupUnmuteMemberEvent",
                        groupUnmuteMemberEvent: GroupLiftShutUpMemberEvent.internalBinaryRead(reader, reader.uint32(), options, (message.event as any).groupUnmuteMemberEvent)
                    };
                    break;
                case /* Laana.GroupLiftShutUpAllEvent groupUnmuteAllEvent */ 211:
                    message.event = {
                        oneofKind: "groupUnmuteAllEvent",
                        groupUnmuteAllEvent: GroupLiftShutUpAllEvent.internalBinaryRead(reader, reader.uint32(), options, (message.event as any).groupUnmuteAllEvent)
                    };
                    break;
                case /* Laana.GroupEmojiLikeEvent groupEmojiLikeEvent */ 212:
                    message.event = {
                        oneofKind: "groupEmojiLikeEvent",
                        groupEmojiLikeEvent: GroupEmojiLikeEvent.internalBinaryRead(reader, reader.uint32(), options, (message.event as any).groupEmojiLikeEvent)
                    };
                    break;
                case /* Laana.SomeoneRequestToAddBuddyEvent someoneRequestToAddBuddyEvent */ 301:
                    message.event = {
                        oneofKind: "someoneRequestToAddBuddyEvent",
                        someoneRequestToAddBuddyEvent: SomeoneRequestToAddBuddyEvent.internalBinaryRead(reader, reader.uint32(), options, (message.event as any).someoneRequestToAddBuddyEvent)
                    };
                    break;
                case /* Laana.SomeoneRequestToJoinGroupEvent someoneRequestToJoinGroupEvent */ 302:
                    message.event = {
                        oneofKind: "someoneRequestToJoinGroupEvent",
                        someoneRequestToJoinGroupEvent: SomeoneRequestToJoinGroupEvent.internalBinaryRead(reader, reader.uint32(), options, (message.event as any).someoneRequestToJoinGroupEvent)
                    };
                    break;
                case /* Laana.SelfInvitedToGroupEvent selfInvitedToGroupEvent */ 303:
                    message.event = {
                        oneofKind: "selfInvitedToGroupEvent",
                        selfInvitedToGroupEvent: SelfInvitedToGroupEvent.internalBinaryRead(reader, reader.uint32(), options, (message.event as any).selfInvitedToGroupEvent)
                    };
                    break;
                case /* Laana.ExtendedEvent extendedEvent */ 9999:
                    message.event = {
                        oneofKind: "extendedEvent",
                        extendedEvent: ExtendedEvent.internalBinaryRead(reader, reader.uint32(), options, (message.event as any).extendedEvent)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: EventWrapper, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string eventId = 1; */
        if (message.eventId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.eventId);
        /* uint64 time = 2; */
        if (message.time !== 0n)
            writer.tag(2, WireType.Varint).uint64(message.time);
        /* string botUin = 3; */
        if (message.botUin !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.botUin);
        /* Laana.BuddyAddedEvent buddyAddedEvent = 101; */
        if (message.event.oneofKind === "buddyAddedEvent")
            BuddyAddedEvent.internalBinaryWrite(message.event.buddyAddedEvent, writer.tag(101, WireType.LengthDelimited).fork(), options).join();
        /* Laana.BuddyMessageWithdrawEvent buddyMessageWithdrawEvent = 102; */
        if (message.event.oneofKind === "buddyMessageWithdrawEvent")
            BuddyMessageWithdrawEvent.internalBinaryWrite(message.event.buddyMessageWithdrawEvent, writer.tag(102, WireType.LengthDelimited).fork(), options).join();
        /* Laana.GroupAdminChangeEvent groupAdminChangeEvent = 201; */
        if (message.event.oneofKind === "groupAdminChangeEvent")
            GroupAdminChangeEvent.internalBinaryWrite(message.event.groupAdminChangeEvent, writer.tag(201, WireType.LengthDelimited).fork(), options).join();
        /* Laana.GroupEssenceMessageEvent groupEssenceMessageEvent = 202; */
        if (message.event.oneofKind === "groupEssenceMessageEvent")
            GroupEssenceMessageEvent.internalBinaryWrite(message.event.groupEssenceMessageEvent, writer.tag(202, WireType.LengthDelimited).fork(), options).join();
        /* Laana.GroupMemberCardChangeEvent groupMemberCardChangeEvent = 203; */
        if (message.event.oneofKind === "groupMemberCardChangeEvent")
            GroupMemberCardChangeEvent.internalBinaryWrite(message.event.groupMemberCardChangeEvent, writer.tag(203, WireType.LengthDelimited).fork(), options).join();
        /* Laana.GroupMemberIncreaseEvent groupMemberIncreaseEvent = 204; */
        if (message.event.oneofKind === "groupMemberIncreaseEvent")
            GroupMemberIncreaseEvent.internalBinaryWrite(message.event.groupMemberIncreaseEvent, writer.tag(204, WireType.LengthDelimited).fork(), options).join();
        /* Laana.GroupMemberDecreaseEvent groupMemberDecreaseEvent = 205; */
        if (message.event.oneofKind === "groupMemberDecreaseEvent")
            GroupMemberDecreaseEvent.internalBinaryWrite(message.event.groupMemberDecreaseEvent, writer.tag(205, WireType.LengthDelimited).fork(), options).join();
        /* Laana.GroupMemberTitleChangeEvent groupMemberTitleChangeEvent = 206; */
        if (message.event.oneofKind === "groupMemberTitleChangeEvent")
            GroupMemberTitleChangeEvent.internalBinaryWrite(message.event.groupMemberTitleChangeEvent, writer.tag(206, WireType.LengthDelimited).fork(), options).join();
        /* Laana.GroupMessageWithdrawEvent groupMessageWithdrawEvent = 207; */
        if (message.event.oneofKind === "groupMessageWithdrawEvent")
            GroupMessageWithdrawEvent.internalBinaryWrite(message.event.groupMessageWithdrawEvent, writer.tag(207, WireType.LengthDelimited).fork(), options).join();
        /* Laana.GroupShutUpMemberEvent groupMuteMemberEvent = 208; */
        if (message.event.oneofKind === "groupMuteMemberEvent")
            GroupShutUpMemberEvent.internalBinaryWrite(message.event.groupMuteMemberEvent, writer.tag(208, WireType.LengthDelimited).fork(), options).join();
        /* Laana.GroupShutUpAllEvent groupMuteAllEvent = 209; */
        if (message.event.oneofKind === "groupMuteAllEvent")
            GroupShutUpAllEvent.internalBinaryWrite(message.event.groupMuteAllEvent, writer.tag(209, WireType.LengthDelimited).fork(), options).join();
        /* Laana.GroupLiftShutUpMemberEvent groupUnmuteMemberEvent = 210; */
        if (message.event.oneofKind === "groupUnmuteMemberEvent")
            GroupLiftShutUpMemberEvent.internalBinaryWrite(message.event.groupUnmuteMemberEvent, writer.tag(210, WireType.LengthDelimited).fork(), options).join();
        /* Laana.GroupLiftShutUpAllEvent groupUnmuteAllEvent = 211; */
        if (message.event.oneofKind === "groupUnmuteAllEvent")
            GroupLiftShutUpAllEvent.internalBinaryWrite(message.event.groupUnmuteAllEvent, writer.tag(211, WireType.LengthDelimited).fork(), options).join();
        /* Laana.GroupEmojiLikeEvent groupEmojiLikeEvent = 212; */
        if (message.event.oneofKind === "groupEmojiLikeEvent")
            GroupEmojiLikeEvent.internalBinaryWrite(message.event.groupEmojiLikeEvent, writer.tag(212, WireType.LengthDelimited).fork(), options).join();
        /* Laana.SomeoneRequestToAddBuddyEvent someoneRequestToAddBuddyEvent = 301; */
        if (message.event.oneofKind === "someoneRequestToAddBuddyEvent")
            SomeoneRequestToAddBuddyEvent.internalBinaryWrite(message.event.someoneRequestToAddBuddyEvent, writer.tag(301, WireType.LengthDelimited).fork(), options).join();
        /* Laana.SomeoneRequestToJoinGroupEvent someoneRequestToJoinGroupEvent = 302; */
        if (message.event.oneofKind === "someoneRequestToJoinGroupEvent")
            SomeoneRequestToJoinGroupEvent.internalBinaryWrite(message.event.someoneRequestToJoinGroupEvent, writer.tag(302, WireType.LengthDelimited).fork(), options).join();
        /* Laana.SelfInvitedToGroupEvent selfInvitedToGroupEvent = 303; */
        if (message.event.oneofKind === "selfInvitedToGroupEvent")
            SelfInvitedToGroupEvent.internalBinaryWrite(message.event.selfInvitedToGroupEvent, writer.tag(303, WireType.LengthDelimited).fork(), options).join();
        /* Laana.ExtendedEvent extendedEvent = 9999; */
        if (message.event.oneofKind === "extendedEvent")
            ExtendedEvent.internalBinaryWrite(message.event.extendedEvent, writer.tag(9999, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message Laana.EventWrapper
 */
export const EventWrapper = new EventWrapper$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ExtendedEvent$Type extends MessageType<ExtendedEvent> {
    constructor() {
        super("Laana.ExtendedEvent", [
            { no: 1, name: "eventName", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "eventData", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
    create(value?: PartialMessage<ExtendedEvent>): ExtendedEvent {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.eventName = "";
        message.eventData = new Uint8Array(0);
        if (value !== undefined)
            reflectionMergePartial<ExtendedEvent>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ExtendedEvent): ExtendedEvent {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string eventName */ 1:
                    message.eventName = reader.string();
                    break;
                case /* bytes eventData */ 2:
                    message.eventData = reader.bytes();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ExtendedEvent, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string eventName = 1; */
        if (message.eventName !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.eventName);
        /* bytes eventData = 2; */
        if (message.eventData.length)
            writer.tag(2, WireType.LengthDelimited).bytes(message.eventData);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message Laana.ExtendedEvent
 */
export const ExtendedEvent = new ExtendedEvent$Type();
