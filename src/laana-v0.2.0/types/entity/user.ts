// @generated by protobuf-ts 2.9.4
// @generated from protobuf file "entity/user.proto" (package "Laana", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message Laana.UserEntity
 */
export interface UserEntity {
    /**
     * @generated from protobuf field: string uin = 1;
     */
    uin: string;
    /**
     * @generated from protobuf field: string nick = 2;
     */
    nick: string;
    /**
     * @generated from protobuf field: string sex = 3;
     */
    sex: string;
    /**
     * @generated from protobuf field: optional uint32 age = 4;
     */
    age?: number;
    /**
     * @generated from protobuf field: optional string qid = 5;
     */
    qid?: string;
    /**
     * @generated from protobuf oneof: roleData
     */
    roleData: {
        oneofKind: "buddyRoleData";
        /**
         * @generated from protobuf field: Laana.BuddyRoleData buddyRoleData = 11;
         */
        buddyRoleData: BuddyRoleData;
    } | {
        oneofKind: "groupRoleData";
        /**
         * @generated from protobuf field: Laana.GroupRoleData groupRoleData = 12;
         */
        groupRoleData: GroupRoleData;
    } | {
        oneofKind: undefined;
    };
}
/**
 * @generated from protobuf enum Laana.UserEntity.Sex
 */
export enum UserEntity_Sex {
    /**
     * @generated from protobuf enum value: UNKNOWN = 0;
     */
    UNKNOWN = 0,
    /**
     * @generated from protobuf enum value: MALE = 1;
     */
    MALE = 1,
    /**
     * @generated from protobuf enum value: FEMALE = 2;
     */
    FEMALE = 2
}
/**
 * @generated from protobuf message Laana.BuddyRoleData
 */
export interface BuddyRoleData {
    /**
     * @generated from protobuf field: optional string remark = 1;
     */
    remark?: string;
}
/**
 * @generated from protobuf message Laana.GroupRoleData
 */
export interface GroupRoleData {
    /**
     * @generated from protobuf field: Laana.GroupRoleData.PermissionLevel permissionLevel = 1;
     */
    permissionLevel: GroupRoleData_PermissionLevel;
    /**
     * @generated from protobuf field: optional string groupNick = 2;
     */
    groupNick?: string;
    /**
     * @generated from protobuf field: optional uint32 joinTime = 3;
     */
    joinTime?: number;
    /**
     * @generated from protobuf field: uint32 lastSpeakTime = 4;
     */
    lastSpeakTime: number;
    /**
     * @generated from protobuf field: uint32 level = 5;
     */
    level: number;
    /**
     * @generated from protobuf field: uint32 shutUpTime = 6;
     */
    shutUpTime: number;
    /**
     * @generated from protobuf field: bool isRobot = 7;
     */
    isRobot: boolean;
}
/**
 * @generated from protobuf enum Laana.GroupRoleData.PermissionLevel
 */
export enum GroupRoleData_PermissionLevel {
    /**
     * @generated from protobuf enum value: FALLBACK = 0;
     */
    FALLBACK = 0,
    /**
     * @generated from protobuf enum value: NORMAL = 2;
     */
    NORMAL = 2,
    /**
     * @generated from protobuf enum value: ADMIN = 3;
     */
    ADMIN = 3,
    /**
     * @generated from protobuf enum value: OWNER = 4;
     */
    OWNER = 4
}
// @generated message type with reflection information, may provide speed optimized methods
class UserEntity$Type extends MessageType<UserEntity> {
    constructor() {
        super("Laana.UserEntity", [
            { no: 1, name: "uin", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "nick", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "sex", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "age", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "qid", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "buddyRoleData", kind: "message", oneof: "roleData", T: () => BuddyRoleData },
            { no: 12, name: "groupRoleData", kind: "message", oneof: "roleData", T: () => GroupRoleData }
        ]);
    }
    create(value?: PartialMessage<UserEntity>): UserEntity {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.uin = "";
        message.nick = "";
        message.sex = "";
        message.roleData = { oneofKind: undefined };
        if (value !== undefined)
            reflectionMergePartial<UserEntity>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UserEntity): UserEntity {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string uin */ 1:
                    message.uin = reader.string();
                    break;
                case /* string nick */ 2:
                    message.nick = reader.string();
                    break;
                case /* string sex */ 3:
                    message.sex = reader.string();
                    break;
                case /* optional uint32 age */ 4:
                    message.age = reader.uint32();
                    break;
                case /* optional string qid */ 5:
                    message.qid = reader.string();
                    break;
                case /* Laana.BuddyRoleData buddyRoleData */ 11:
                    message.roleData = {
                        oneofKind: "buddyRoleData",
                        buddyRoleData: BuddyRoleData.internalBinaryRead(reader, reader.uint32(), options, (message.roleData as any).buddyRoleData)
                    };
                    break;
                case /* Laana.GroupRoleData groupRoleData */ 12:
                    message.roleData = {
                        oneofKind: "groupRoleData",
                        groupRoleData: GroupRoleData.internalBinaryRead(reader, reader.uint32(), options, (message.roleData as any).groupRoleData)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: UserEntity, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string uin = 1; */
        if (message.uin !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.uin);
        /* string nick = 2; */
        if (message.nick !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.nick);
        /* string sex = 3; */
        if (message.sex !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.sex);
        /* optional uint32 age = 4; */
        if (message.age !== undefined)
            writer.tag(4, WireType.Varint).uint32(message.age);
        /* optional string qid = 5; */
        if (message.qid !== undefined)
            writer.tag(5, WireType.LengthDelimited).string(message.qid);
        /* Laana.BuddyRoleData buddyRoleData = 11; */
        if (message.roleData.oneofKind === "buddyRoleData")
            BuddyRoleData.internalBinaryWrite(message.roleData.buddyRoleData, writer.tag(11, WireType.LengthDelimited).fork(), options).join();
        /* Laana.GroupRoleData groupRoleData = 12; */
        if (message.roleData.oneofKind === "groupRoleData")
            GroupRoleData.internalBinaryWrite(message.roleData.groupRoleData, writer.tag(12, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message Laana.UserEntity
 */
export const UserEntity = new UserEntity$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BuddyRoleData$Type extends MessageType<BuddyRoleData> {
    constructor() {
        super("Laana.BuddyRoleData", [
            { no: 1, name: "remark", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<BuddyRoleData>): BuddyRoleData {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<BuddyRoleData>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: BuddyRoleData): BuddyRoleData {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string remark */ 1:
                    message.remark = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: BuddyRoleData, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional string remark = 1; */
        if (message.remark !== undefined)
            writer.tag(1, WireType.LengthDelimited).string(message.remark);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message Laana.BuddyRoleData
 */
export const BuddyRoleData = new BuddyRoleData$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GroupRoleData$Type extends MessageType<GroupRoleData> {
    constructor() {
        super("Laana.GroupRoleData", [
            { no: 1, name: "permissionLevel", kind: "enum", T: () => ["Laana.GroupRoleData.PermissionLevel", GroupRoleData_PermissionLevel] },
            { no: 2, name: "groupNick", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "joinTime", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 4, name: "lastSpeakTime", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "level", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 6, name: "shutUpTime", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 7, name: "isRobot", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<GroupRoleData>): GroupRoleData {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.permissionLevel = 0;
        message.lastSpeakTime = 0;
        message.level = 0;
        message.shutUpTime = 0;
        message.isRobot = false;
        if (value !== undefined)
            reflectionMergePartial<GroupRoleData>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GroupRoleData): GroupRoleData {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* Laana.GroupRoleData.PermissionLevel permissionLevel */ 1:
                    message.permissionLevel = reader.int32();
                    break;
                case /* optional string groupNick */ 2:
                    message.groupNick = reader.string();
                    break;
                case /* optional uint32 joinTime */ 3:
                    message.joinTime = reader.uint32();
                    break;
                case /* uint32 lastSpeakTime */ 4:
                    message.lastSpeakTime = reader.uint32();
                    break;
                case /* uint32 level */ 5:
                    message.level = reader.uint32();
                    break;
                case /* uint32 shutUpTime */ 6:
                    message.shutUpTime = reader.uint32();
                    break;
                case /* bool isRobot */ 7:
                    message.isRobot = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GroupRoleData, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* Laana.GroupRoleData.PermissionLevel permissionLevel = 1; */
        if (message.permissionLevel !== 0)
            writer.tag(1, WireType.Varint).int32(message.permissionLevel);
        /* optional string groupNick = 2; */
        if (message.groupNick !== undefined)
            writer.tag(2, WireType.LengthDelimited).string(message.groupNick);
        /* optional uint32 joinTime = 3; */
        if (message.joinTime !== undefined)
            writer.tag(3, WireType.Varint).uint32(message.joinTime);
        /* uint32 lastSpeakTime = 4; */
        if (message.lastSpeakTime !== 0)
            writer.tag(4, WireType.Varint).uint32(message.lastSpeakTime);
        /* uint32 level = 5; */
        if (message.level !== 0)
            writer.tag(5, WireType.Varint).uint32(message.level);
        /* uint32 shutUpTime = 6; */
        if (message.shutUpTime !== 0)
            writer.tag(6, WireType.Varint).uint32(message.shutUpTime);
        /* bool isRobot = 7; */
        if (message.isRobot !== false)
            writer.tag(7, WireType.Varint).bool(message.isRobot);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message Laana.GroupRoleData
 */
export const GroupRoleData = new GroupRoleData$Type();
